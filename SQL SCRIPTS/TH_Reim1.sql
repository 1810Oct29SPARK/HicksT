SELECT * 
FROM EMPLOYEE WHERE REPORTSTO = 4;

ALTER TABLE ACCOUNT
ADD EMPLOYEEID INTEGER;

SELECT *
FROM EMPLOYEE E
INNER JOIN ACCOUNT A ON
E.EMPLOYEEID = A.EMPLOYEEID
WHERE E.EMPLOYEEID = 1;

ALTER TABLE REIMBURSEMENTSTATUS
RENAME COLUMN STATUS_ID TO STATUSID;

ALTER TABLE REIMBURSEMENTTYPE
RENAME COLUMN REIMBURSEMENT_TYPE_ID TO TYPEID;

COMMIT;


SELECT R.REIMBURSEMENTID, R.EMPLOYEEID, R.RESOLVERID, R.STATUSID, R.TYPEID
FROM REIMBURSEMENTS R 
INNER JOIN EMPLOYEE E ON 
R.EMPLOYEEID = E.EMPLOYEEID 
INNER JOIN REIMBURSEMENTSTATUS RS ON 
RS.STATUSID = R.STATUSID 
INNER JOIN REIMBURSEMENTTYPE RT ON 
RT.TYPEID = R.TYPEID;

--R.REIMBURSEMENTID, R.EMPLOYEEID, R.AMOUNT, R.RESOLVERID, R.STATUSID, R.TYPEID, E.EMPLOYEEID, E.FIRSTNAME, E.LASTNAME, E.EMAIL, E.POSITIONID, E.ACCOUNTID, E2.EMPLOYEEID AS MANID, E2.FIRSTNAME AS MANFNAME, E2.LASTNAME AS MANLNAME, E2.EMAIL
SELECT  R.REIMBURSEMENTID, R.EMPLOYEEID, R.AMOUNT, R.RESOLVERID, R.STATUSID, R.TYPEID,
E.EMPLOYEEID, E.FIRSTNAME, E.LASTNAME, E.EMAIL, E.POSITIONID, E.ACCOUNTID, E.REPORTSTO, A.ACCOUNTNUM,
E2.EMPLOYEEID AS MANID, E2.FIRSTNAME AS MANFNAME, E2.LASTNAME AS MANLNAME, E2.EMAIL AS MANEMAIL
FROM REIMBURSEMENTS R
INNER JOIN EMPLOYEE E ON
R.EMPLOYEEID = E.EMPLOYEEID 
INNER JOIN REIMBURSEMENTSTATUS RS ON
RS.STATUSID = R.STATUSID
INNER JOIN REIMBURSEMENTTYPE RT ON
RT.TYPEID = R.TYPEID
INNER JOIN ACCOUNT A ON
E.EMPLOYEEID = A.EMPLOYEEID 
INNER JOIN EMPLOYEE E2 ON
E2.EMPLOYEEID = E.REPORTSTO;









ALTER TABLE EMPLOYEE 
ADD CONSTRAINT PK_EMPLOYEE
PRIMARY KEY (EMPLOYEEID);
/
COMMIT;

ALTER TABLE REIMBURSEMENTS 
ADD CONSTRAINT PK_REIMBURSEMENT
PRIMARY KEY (REIMBURSEMENTID);
/
ALTER TABLE ACCOUNT 
ADD CONSTRAINT PK_ACCOUNT
PRIMARY KEY (ACCOUNTID);
/
COMMIT;

ALTER TABLE POSITION 
ADD CONSTRAINT PK_POSITION
PRIMARY KEY (MANAGERID);
/

ALTER TABLE POSITION 
ADD CONSTRAINT PK_POSITION
PRIMARY KEY (MANAGERID);
/
ALTER TABLE POSITION 
ADD CONSTRAINT PK_POSITION
PRIMARY KEY (MANAGERID);
/
ALTER TABLE EMPLOYEE 
ADD CONSTRAINT FK_EMP_POSITIONID
FOREIGN KEY (POSITIONID) REFERENCES POSITION(MANAGERID);
/
ALTER TABLE EMPLOYEE 
ADD CONSTRAINT FK_EMP_ACCOUNTID
FOREIGN KEY (ACCOUNTID) REFERENCES ACCOUNT(ACCOUNTID);
/
ALTER TABLE REIMBURSEMENTS 
ADD CONSTRAINT FK_REIMB_EMPLOYEEID
FOREIGN KEY (EMPLOYEEID) REFERENCES EMPLOYEE(EMPLOYEEID);
/
ALTER TABLE REIMBURSEMENTS 
ADD CONSTRAINT FK_REIMB_RESOLVERID
FOREIGN KEY (RESOLVERID) REFERENCES EMPLOYEE(EMPLOYEEID);
/
COMMIT;
ALTER TABLE REIMBURSEMENTS 
ADD CONSTRAINT FK_REIMB_STATUSID
FOREIGN KEY (STATUSID) REFERENCES REIMBURSEMENTSTATUS(STATUSID);
/
COMMIT;
ALTER TABLE REIMBURSEMENTS 
ADD CONSTRAINT FK_REIMB_TYPEID
FOREIGN KEY (TYPEID) REFERENCES REIMBURSEMENTTYPE(TYPEID);
/
COMMIT;
ALTER TABLE ACCOUNT 
ADD CONSTRAINT FK_ACCOUNT_EMPLOYEEID
FOREIGN KEY (EMPLOYEEID) REFERENCES EMPLOYEE(EMPLOYEEID);
/
COMMIT;

CREATE SEQUENCE SQ_EMPLOYEE_PK
START WITH 102
INCREMENT BY 1;
/
CREATE SEQUENCE SQ_REIMBURSEMENT_PK
START WITH 201
INCREMENT BY 1;
/
CREATE SEQUENCE SQ_ACCOUNT_PK
START WITH 101
INCREMENT BY 1;
/
commit;
CREATE OR REPLACE TRIGGER TR_INSERT_EMPLOYEE
BEFORE INSERT ON EMPLOYEE --SPECIFY WHICH DML OPERATION, BEOFRE/AFTER, AND WHICH TABLE
FOR EACH ROW
BEGIN
    SELECT SQ_EMPLOYEE_PK.NEXTVAL INTO :NEW.EMPLOYEEID FROM DUAL;
    SELECT SQ_ACCOUNT_PK.NEXTVAL INTO :NEW.ACCOUNTID FROM DUAL;
END;

CREATE OR REPLACE TRIGGER TR_INSERT_EMPLOYEE_ACCOUNT
BEFORE INSERT ON EMPLOYEE --SPECIFY WHICH DML OPERATION, BEOFRE/AFTER, AND WHICH TABLE
FOR EACH ROW
BEGIN
    SELECT SQ_EMPLOYEE_PK.NEXTVAL INTO :NEW.ACCOUNTID FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER TR_INSERT_REIMBURSEMENT
BEFORE INSERT ON REIMBURSEMENTS --SPECIFY WHICH DML OPERATION, BEOFRE/AFTER, AND WHICH TABLE
FOR EACH ROW
BEGIN
    SELECT SQ_REIMBURSEMENT_PK.NEXTVAL INTO :NEW.REIMBURSEMENTID FROM DUAL;
END;
/
CREATE OR REPLACE TRIGGER TR_INSERT_ACCOUNT
BEFORE INSERT ON ACCOUNT --SPECIFY WHICH DML OPERATION, BEOFRE/AFTER, AND WHICH TABLE
FOR EACH ROW
BEGIN
    SELECT SQ_ACCOUNT_PK.NEXTVAL INTO :NEW.ACCOUNTID FROM DUAL;
END;
/
COMMIT;
ALTER TABLE REIMBURSEMENTS
RENAME TO REIMBURSEMENT;
COMMIT;

ALTER TABLE EMPLOYEE
DROP CONSTRAINT FK_EMP_ACCOUNTID;

INSERT INTO EMPLOYEE(FIRSTNAME, LASTNAME, EMAIL, USERNAME, PASSWORD, REPORTSTO)
VALUES('JANE', 'DOE', 'JDOE2@EMAIL.COM', 'JDOE2' , 'PASSWORD', 7);
COMMIT;